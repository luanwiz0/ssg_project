<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team_h.wishbook.dao.mybatis.mapper.SellMapper">

<!-- 장바구니 목록 조회 -->
<select id="getCartItemList" resultType="com.team_h.wishbook.domain.CartItem">
	SELECT CART.CARTITEMID AS cartId,
		CART.BOOKID AS bookId,
		CART.PRICE AS PRICE,
		BOOK.TITLE AS title,
		CART.QUANTITY AS quantity,
		BOOK.IMAGEURL AS imageUrl,  
		CART.KIND AS KIND,
		CART.GROUPID AS GROUPID
	FROM CART
	JOIN BOOK
	ON CART.BOOKID = BOOK.BOOKID
	WHERE CART.USERID = #{memberId}
</select>

<!-- 장바구니 1개 상품 정보 가져오기 -->
<select id="getCartItem" resultType="com.team_h.wishbook.domain.CartItem">
	SELECT CART.CARTITEMID AS cartId,
		CART.BOOKID AS bookId,
		CART.PRICE AS PRICE,
		BOOK.TITLE AS title,
		CART.QUANTITY AS quantity,
		BOOK.IMAGEURL AS imageUrl,
		CART.KIND AS KIND  
	FROM CART
	JOIN BOOK
	ON CART.BOOKID = BOOK.BOOKID
	WHERE CART.CARTITEMID = #{cartId}
</select>

<!-- 장바구니 상품 추가 -->
<insert id="addCartItems" parameterType="com.team_h.wishbook.domain.CartItem">
	<selectKey keyProperty="cartId" resultType="int" order="BEFORE">
  		SELECT Sequence_cartItemId.nextval FROM DUAL
  	</selectKey>
  	INSERT INTO CART
  		(CARTITEMID, USERID, BOOKID, QUANTITY, price, KIND, GROUPID)
  	VALUES (#{cartId}, #{userId}, #{bookId}, #{quantity}, #{price}, #{kind}, #{groupId})
</insert>

<!-- 장바구니 상품 수정 -->
<update id="updateCartItemQuantity">
  	UPDATE CART SET 
  		QUANTITY = #{quantity},
  		PRICE = #{price}
   		WHERE CARTITEMID = #{cartItemId}
 </update>

<!-- 장바구니 상품 삭제 -->
<delete id="deleteCartItems">
  	DELETE FROM CART
  		WHERE CARTITEMID = #{cartItemId}
</delete>

<!-- 주문 진행 -->
<insert id="addOrder" parameterType="com.team_h.wishbook.domain.Order">
	<selectKey keyProperty="orderId" resultType="int" order="BEFORE">
  		SELECT Sequence_orderId.nextval FROM DUAL
  	</selectKey>
  	INSERT INTO ORDERLIST
  		(ORDERID, USERID, ORDERDATE, USERTEL, ADDRESS, CARDTYPE, CARDNUM, BOOKID, TOTALPRICE, QUANTITY, KIND)
  	VALUES (#{orderId}, #{userId}, sysdate, #{userTel}, #{address}, #{cardType}, #{cardNum}, #{bookId}, #{totalPrice}, #{quantity}, #{kind})
</insert>

<!-- 포인트 적립 -->
<update id="plusPoint">
	UPDATE ACCOUNT SET
		POINT = #{point}
	WHERE USERID = #{userId}
</update>

<!-- 포인트 차감 -->
<update id="minusPoint">
	UPDATE ACCOUNT SET
		POINT = #{point}
	WHERE USERID = #{userId}
</update>

<!-- 누적 구매액 증가 -->
<update id="plusPurchaseAmount">
	UPDATE ACCOUNT SET
		PURCHASEAMOUNT = #{purchaseAmount}
	WHERE USERID = #{userId}
</update>

<!-- 등급 정보 확인 -->
<select id="getGradeInfo" resultType="com.team_h.wishbook.domain.Grade">
	SELECT *
	FROM GRADE
	WHERE GRADEID = #{gradeId}
</select>

<!-- 등급 변동 -->
<update id="changeUserGrade">
	UPDATE ACCOUNT SET
		GRADEID = #{gradeId}
	WHERE USERID = #{userId}
</update>

<!-- 주문목록 확인 -->
<select id="getUserOrderList" resultType="com.team_h.wishbook.domain.Order">
  	SELECT *
  	FROM ORDERLIST
  	JOIN BOOK
	ON ORDERLIST.BOOKID = BOOK.BOOKID
  	WHERE ORDERLIST.USERID = #{userId}
 </select>
 
 <!-- (관리자용) 전체 주문목록 확인 -->
<select id="getAllOrderList" resultType="com.team_h.wishbook.domain.Order">
  	SELECT *
  	FROM ORDERLIST
  	JOIN BOOK
	ON ORDERLIST.BOOKID = BOOK.BOOKID
 </select>
 <!-- (사용자)항목 별 주문 목록 확인 -->
 <select id="getUserOrderListByKind" resultType="com.team_h.wishbook.domain.Order">
 SELECT *
  	FROM ORDERLIST
  	JOIN BOOK
	ON ORDERLIST.BOOKID = BOOK.BOOKID
  	WHERE ORDERLIST.USERID = #{userId} AND ORDERLIST.KIND = #{kind}
 </select>

 
 </mapper>